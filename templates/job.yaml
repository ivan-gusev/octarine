apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "octarine.fullname" . }}-bootstrap
  labels:
    # The "app.kubernetes.io/managed-by" label is used to track which tool deployed a given chart.
    # It is useful for admins who want to see what releases a particular tool
    # is responsible for.
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    # The "app.kubernetes.io/instance" convention makes it easy to tie a release to all of the
    # Kubernetes resources that were created as part of that release.
    app.kubernetes.io/instance: {{ .Release.Name }}
    # This makes it easy to audit chart usage.
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/name: {{ template "octarine.name" . }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ template "octarine.fullname" . }}
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ template "octarine.name" . }}
    spec:
      # This shows how to use a simple value. This will look for a passed-in value
      # called restartPolicy. If it is not found, it will use the default value.
      # {{ default "Never" .restartPolicy }} is a slightly optimized version of the
      # more conventional syntax: {{ .restartPolicy | default "Never" }}
      restartPolicy: {{ .Values.restartPolicy | default "Never" }}
      containers:
        - name: octactl-bootstrap
          image: "octarinesec/octactl-container:{{ .Values.version_tag }}"
          command: ["/bin/bash", "/etc/octarine/octarine-install.sh" ]
          volumeMounts:
            - mountPath: /etc/octarine
              name: etc-octarine
      serviceAccountName: octarine-{{ .Release.Name }}
      automountServiceAccountToken: true
      volumes:
        - name: etc-octarine
          secret:
            secretName: octarine-{{ .Release.Name }}
      imagePullSecrets:
      - {name: docker-registry-secret}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "octarine.fullname" . }}-cleanup
  labels:
    # The "app.kubernetes.io/managed-by" label is used to track which tool deployed a given chart.
    # It is useful for admins who want to see what releases a particular tool
    # is responsible for.
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    # The "app.kubernetes.io/instance" convention makes it easy to tie a release to all of the
    # Kubernetes resources that were created as part of that release.
    app.kubernetes.io/instance: {{ .Release.Name }}
    # This makes it easy to audit chart usage.
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/name: {{ template "octarine.name" . }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ template "octarine.fullname" . }}
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ template "octarine.name" . }}
    spec:
      # This shows how to use a simple value. This will look for a passed-in value
      # called restartPolicy. If it is not found, it will use the default value.
      # {{ default "Never" .restartPolicy }} is a slightly optimized version of the
      # more conventional syntax: {{ .restartPolicy | default "Never" }}
      restartPolicy: {{ .Values.restartPolicy | default "Never" }}
      containers:
        - name: octactl-cleanup
          image: "octarinesec/octactl-container:{{ .Values.version_tag }}"
          command: ["/bin/bash", "/etc/octarine/octarine-cleanup.sh" ]
          volumeMounts:
            - mountPath: /etc/octarine
              name: etc-octarine
      serviceAccountName: octarine-{{ .Release.Name }}
      automountServiceAccountToken: true
      volumes:
        - name: etc-octarine
          secret:
            secretName: octarine-{{ .Release.Name }}
      imagePullSecrets:
      - {name: docker-registry-secret}
